"""
Django settings for weather_map project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""


from pathlib import Path
from dotenv import load_dotenv
import os


BASE_DIR = Path(__file__).resolve().parent.parent


dotenv_path = os.path.join(BASE_DIR, 'utility', '.env')
load_dotenv(dotenv_path)


SECRET_KEY = os.getenv('SECRET_KEY', 'hn=o6eq$7q2+grovpa-g3yn%1nd7ae7_*ul41r=$gvl89%fm%w')
WEBSITE_HOSTNAME = os.getenv('WEBSITE_HOSTNAME', None)

# Build paths inside the project like this: BASE_DIR / 'subdir'.



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-d@xahn7x_e9+3b3k$ov(jeakhh5e0=^=v1&p^fkoyi-%&hp9ve'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = None

# ALLOWED_HOSTS = []

if DEBUG: 

    ALLOWED_HOSTS = [] 

else: 

    ALLOWED_HOSTS = [WEBSITE_HOSTNAME] 

    CSRF_TRUSTED_ORIGINS = [f'https://{WEBSITE_HOSTNAME}'] 



CORS_ALLOWED_ORIGINS = [f'https://{WEBSITE_HOSTNAME}']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'weather',
    'corsheaders',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'weather_map.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'weather.context_processors.media_url',           
            ],
        },
    },
]

WSGI_APPLICATION = 'weather_map.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# STATIC_URL = 'static/'

# # Default primary key field type
# # https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

# STATIC_URL ="static/"
# MEDIA_ROOT = BASE_DIR / 'media'
# MEDIA_URL = 'media/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]


# STATIC_URL = 'static/'
# MEDIA_ROOT = BASE_DIR / 'media'
# MEDIA_URL = '/media/'


STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

AZURE_SA_NAME = os.getenv('AZURE_SA_NAME')
AZURE_SA_KEY = os.getenv('AZURE_SA_KEY')

STORAGES = {
    "default": {
        "BACKEND": "storages.backends.azure_storage.AzureStorage",
        "OPTIONS": {
            "account_name": AZURE_SA_NAME,
            "account_key": AZURE_SA_KEY,
            "azure_container": "media",
        },
    },
    "staticfiles": {
        "BACKEND": "storages.backends.azure_storage.AzureStorage",
        "OPTIONS": {
            "account_name": AZURE_SA_NAME,
            "account_key": AZURE_SA_KEY,
            "azure_container": "static",
        },
    },
}

STATIC_URL = f'https://{AZURE_SA_NAME}.blob.core.windows.net/static/'

MEDIA_URL = f'https://{AZURE_SA_NAME}.blob.core.windows.net/media/'